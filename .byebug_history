c
0x00007fd48bc7dd98
x.image
@tasks.each
x.title
x.image
x
c
 @task.update(update_params)
update_params
continue
update_params
continue
update_params
@task
update_params
c
 @task.update(update_params)
=> 39:     if @task.update(update_params)
update_params
c
update_params
c
@task
update_params
c
user
c
params
c
@task
params
current_member.users.pluck(:firstname)
current_member.users.pluck(:id)
c
@task
params
/tasks
c
current_member.users.pluck
c
params
@task
c
user
Assign
assigned_task
current_user
c
@task
c
:user
current_member.users.pluck(:id)
c
@task
@yask
c
assign
c
@task
params
c
:user(:id)
:user(id)
:users.id
:users
:user
user
@user
@task.user
user
current_member.users.pluck(:id,:firstname)
current_member.users.pluck(:id)
id
c
@task
c
@task
c
@task
user_id
c
@task
user_id
c
user_id
@task
update_params
c
@task
params
c
User.where(id)
User.id
Task.users
Task.user
user_id
user
@user
current_member.users.pluck(:id)
current_member.users
current_member
current_user
id
c
@task.approve
@task.status
update_params
c
update_params
c
params
c
user_id
current_member.users.pluck(:firstname,:id)
current_member.users.pluck(:firstname)
current_member.users
current_member
id
user :id
user:id
:id
user
user_id
c
users
user
id
user_id
current_member.users.pluck(:id)
current_member.users
current_member
id
user_id
c
current_user.where(user_id==current_member.tasks)
cuurent_user
current_user.where(user_id==current_member.tasks)
current_user.where(user)
current_user.user
current_user.user_id
current_user
cuurent_user
c
current_user.tasks
current_user.task
current_user
c
current_user
current_user.tasks
c
Task.new(task_params)
Task.new(task_params
Task.new
task_params
c
task_params
@task
c
@task
task_params
params
c
@task
c
current_user
current_member
c
deleted_user_path(x)
c
resources :users
resoourses :users
devise_for :users
c
@user
c
@users
@user
c
x
c
@users
users
x
c
users_path(x)
users_path
x
c
admin_user_path
x
c
current_member
c
current_member
current_user
c
 current_user || current_member
unless current_user || current_member
unles current_user || current_member
unless current_user || current_member
c
request.fullpath
c
user_path(x.id)
c
x.id
x
c
/member/users/:id
x
c
x
user_path(x)
user_path
x
c
current_member.users
c
current_member.users
current_member.where(:user)
current_member.where(user)
current_member(user)
current_member
params
c
@user
params
c
@user
params
c
params
@user
continue
params
c
current_member.users
c
continue
@user.valid?
continue
current_member.tasks.where(assigned_task: nil).or(current_member.tasks.where(status: 'Complete'))
current_member.tasks.where(assigned_task: nil).or(current_member.tasks.where(status: 'Compelete'))
(current_member.tasks).(where(assigned_task: nil).or(current_member.tasks.where(status: 'Compelete')))
(current_member.tasks).(where(assigned_task: nil).or(current_member.tasks.where(status: 'Compelete'))
current_member.tasks.where(assigned_task: nil)
current_member.tasks
current_member.task
current_member
current_user
continue
button_to "Complete", task_path(x), {method: :put , params: {task:{status: "Compelete"}}}
button_to "Complete", method: :put, task_path(x)
button_to "Complete", method: :put, task_path(Task.first)
button_to "Complete", method: :put, Task.first
